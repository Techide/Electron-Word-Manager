// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wordmanager.Data.Models;

namespace WordManager.Api.Migrations
{
    [DbContext(typeof(WordManagerContext))]
    partial class WordManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Curriculum", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.Property<int>("Rank");

                    b.Property<long>("RankTypeId");

                    b.HasKey("Id");

                    b.HasIndex("RankTypeId");

                    b.HasIndex("Rank", "RankTypeId")
                        .IsUnique();

                    b.ToTable("Curricula");
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Description", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("WordId");

                    b.HasKey("Id");

                    b.HasIndex("WordId")
                        .IsUnique();

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Part", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CurriculumId");

                    b.Property<long>("NameId");

                    b.Property<long?>("ParentPartId");

                    b.HasKey("Id");

                    b.HasIndex("CurriculumId");

                    b.HasIndex("NameId");

                    b.HasIndex("ParentPartId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.RankType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RankTypes");
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Word", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long?>("PartId");

                    b.Property<byte[]>("Pronounciation");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Curriculum", b =>
                {
                    b.HasOne("Wordmanager.Data.Models.Entities.RankType", "RankType")
                        .WithMany("Curricula")
                        .HasForeignKey("RankTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Description", b =>
                {
                    b.HasOne("Wordmanager.Data.Models.Entities.Word", "Word")
                        .WithOne("Description")
                        .HasForeignKey("Wordmanager.Data.Models.Entities.Description", "WordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Part", b =>
                {
                    b.HasOne("Wordmanager.Data.Models.Entities.Curriculum", "Curriculum")
                        .WithMany("Parts")
                        .HasForeignKey("CurriculumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Wordmanager.Data.Models.Entities.Category", "Name")
                        .WithMany("Parts")
                        .HasForeignKey("NameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Wordmanager.Data.Models.Entities.Part", "ParentPart")
                        .WithMany("SubParts")
                        .HasForeignKey("ParentPartId");
                });

            modelBuilder.Entity("Wordmanager.Data.Models.Entities.Word", b =>
                {
                    b.HasOne("Wordmanager.Data.Models.Entities.Part")
                        .WithMany("Words")
                        .HasForeignKey("PartId");
                });
#pragma warning restore 612, 618
        }
    }
}
