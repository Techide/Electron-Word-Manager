@import '~src/variables';
$main-color: map-get($globalMainColors, main);
$main-color-highlight: map-get($globalMainColors, main-highlight);
$orange: map-get($globalMainColors, og);

.page-grid {
  display: grid;
  grid-template-columns: 1fr minmax(auto, 600px) 1fr;
  grid-template-rows: auto 1fr;
  justify-content: center;
  grid-row-gap: 1em;
}

.back-button {
  padding: $common-padding-large 0 0 $common-padding-large;

  & i {
    outline: none;
    border-radius: 100%;
    transition: all $globalTransitionTiming ease-in-out;
    cursor: pointer;

    &:focus {
      color: $main-color-highlight;
    }

    &:hover {
      color: $main-color-highlight;
    }
  }
}

.form-title {
  font-size: 2em;
  font-weight: 700;
  align-self: center;
  text-align: center;
  padding: $common-padding-large 0 0 0;
  text-shadow: 0 0 6px #000, 0 0 3px #000;

  grid-column: 2;
  border-bottom: 1px solid $main-color;
  margin-bottom: $common-padding-large;
  cursor: default;
}

.page-form {
  grid-column: 2;
  grid-row: 2;

  .form-body {
    display: grid;
    grid-row-gap: 1rem;

    .radio-button-group {
      display: flex;
      flex-direction: column;
      $common-padding: 3px;

      .button-group-label {
        padding-bottom: $common-padding;
      }

      .buttons-container {
        padding-bottom: $common-padding;
        border-bottom: 1px solid $main-color;
        display: grid;
        grid-template-columns: 1fr 1fr;

        .radio-button {
          display: flex;

          label {
            flex-shrink: 1;
            cursor: pointer;

            /*Hide browsers default radio button*/
            input {
              position: absolute;
              opacity: 0;
              cursor: none;
              height: 0;
              width: 0;
            }

            .check-mark {
              transition-property: color;
              transition: $globalTransitionTiming ease-in-out;
              color: $main-color;
            }

            &:hover {

              .check-mark {
                color: darkgray;
              }
            }

            input:checked~.check-mark {
              color: $orange;
            }

          }

        }
      }
    }

    .form-field {
      display: flex;
      flex-direction: column;

      label {
        grid-column: 1;
        transition-property: color;
        transition: $globalTransitionTiming ease-in-out;
        justify-items: center;
        cursor: text;
      }

      input {
        grid-column: span 2;
        border-bottom: 1px solid $main-color;
        transition-property: border-color;
        transition: $globalTransitionTiming ease-in-out;
        color: $orange;

        &::placeholder {
          transition-property: color;
          transition: $globalTransitionTiming ease-in-out;
          color: $main-color;
        }
      }


      $validation-message-padding: 6px;
      $validation-message-height: calc(1em + #{$validation-message-padding} + #{$validation-message-padding});

      .validation-messages {
        grid-column: span 2;
        height: $validation-message-height;

        .validation-message {
          padding-top: $validation-message-padding;
          color: $globalErrorColor;
          border-bottom-left-radius: $global-border-radius;
          border-bottom-right-radius: $global-border-radius;
        }
      }

      &:hover {
        label {
          // color: $orange;
        }

        input {
          // border-bottom-color: $orange;
          border-bottom-color: darkgray;

          &::placeholder {
            color: darkgray;
          }
        }
      }

      &:focus-within {
        input {
          border-bottom-color: $orange;
        }

        label {
          color: $orange;
        }
      }
    }

  }

}

.input-invalid {
  color: $globalErrorColor;
}

.form-footer {
  display: grid;
  padding-top: 1em;
  margin-top: 1em;
  grid-template-columns: 1fr auto;
  margin-bottom: 1em;

  & .form-button {
    grid-column: 2;
    cursor: pointer;
    padding: 0.5em 1em;
    background-color: map-get($globalMainColors, main);
    border: 1px solid transparent;
    border-radius: $global-border-radius;
    display: flex;
    transition: $globalElementTransition;
    outline: none;

    &:active {
      border: 1px solid white;
    }

    &:focus {
      background-color: map-get($globalMainColors, main-highlight);
    }

    &:hover {
      background-color: map-get($globalMainColors, main-highlight);
    }

    &.button-disabled {
      background-color: map-get($globalBackgroundColors, main);
      border-color: map-get($globalMainColors, main);
      color: map-get($globalMainColors, main);
      cursor: default;
    }
  }
}

.error-messages {
  background-color: map-get($globalMainColors, complement1);
  cursor: default;
  grid-column: span 2;
  padding: 6px;
  border-radius: $global-border-radius;

  & div:not(:last-child) {
    margin-bottom: 1em;
  }
}
